# # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# name: aom-microservice-admin-api-gateway CI

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   test:
#     runs-on: self-hosted
#     strategy:
#       matrix:
# #        node-version: [10.x, 12.x, 14.x]
#         node-version: [12.x, 14.x]
#     steps:
#       - name: work around https://github.com/actions/checkout/issues/211#issuecomment-611986243
#         run: sudo chown -R $USER:$USER /home/*

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Cache Node.js modules
#         uses: actions/cache@v2
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.OS }}-node-
#             ${{ runner.OS }}-

#       - name: Prepare .env
#         run: npm run env:config ci

#       - name: sign JWT keys
#         run: |
#           npm run sign:keys -- aom-mahjong-admin

#       - name: Install
#         env:
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#         run: |
#           npm config set //npm.pkg.github.com/:_authToken=${NPM_TOKEN}
#           npm ci

#       # Run tests
#       - name: Test
#         run: npm run test

#       - name: e2e Test
#         run: npm run docker-compose:test:e2e

#   release:
#     if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#     runs-on: ubuntu-latest
#     needs: [test]
#     steps:
#       - name: work around https://github.com/actions/checkout/issues/211#issuecomment-611986243
#         run: sudo chown -R $USER:$USER /home/*

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14.x

#       - name: Cache Node.js modules
#         uses: actions/cache@v2
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.OS }}-node-
#             ${{ runner.OS }}-

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-1

#       - name: Prepare .env
#         run: npm run env:config ci

#       - name: sign JWT keys
#         run: |
#           npm run sign:keys -- aom-mahjong-admin

#       - name: Install
#         env:
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#         run: |
#           npm config set //npm.pkg.github.com/:_authToken=${NPM_TOKEN}
#           npm ci

#       - name: Release
#         run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           HUSKY: 0